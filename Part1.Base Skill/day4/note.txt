1. 样式表书写位置
共三种.
a. 内嵌式样式表(内部样式表)
    <style>
        CSS语句
    </style>
    优点:方便.基本实现样式和结构的分离.
    缺点:没有完全实现样式和结构的分离.
    不怎么使用.
    控制范围:当前页面.

b. 外链式样式表(外部样式表)
    和HTML文件一样,CSS也应该是一个独立的文件.
    实现:在<head></head>中,<link rel="stylesheet" href="CSS文件路径(相对或绝对)">
    完全实现了样式和结构分离.需要使用该CSS的页面直接引入即可.
    优点:完全实现样式和结构的分离.
    缺点:需要加载一次.
    控制范围:整个网站.

c. 行内式样式表
    将CSS作为标签的属性存在.<div style="属性名1: 属性值1;属性名2: 属性值2;"></div>
    注意:属性值1;与属性名2之间不要有空格!
    优点:权重最高.
    缺点:没有实现样式和结构的分离.
    控制范围:当前标签内部.

2. 样式表的权重
    chrome的style列表中,被划掉的CSS表示被覆盖的SCC.
    chrome的style列表中,element.style表示行内样式.
    行内样式表权重最高.内嵌式样式表和外链式样式表权重相同,后加载的效果由于最后被渲染,所以对于同样的属性,后加载的属性值会被渲染.

3. 问题来源
    标签的渲染模式问题
    标签的三种渲染模式
        a. 块级元素
        b. 行内元素
        c. 行内块元素

4. 块级标签
    块级标签:div p h1-h6 ol ul li dl dt dd header footer aside article section

    块级标签的特点:
        1.可以设置宽高
        2.独占一行
        3. 默认宽度是父级标签的宽度
        4. 一般用于容器布局.可嵌套其他块级元素或行内元素.
        5. p标签不要包裹其他块级元素.因为浏览器在解析时会先将p标签中的内容以div标签为分割点切分为2部分,
           然后将这个div标签和切分后的2个p标签按照同级元素的关系解析.换言之,浏览器不允许p标签中包裹其他
           块级元素.

    之所以说他们是块级标签,是因为他们有一个默认的属性,浏览器在渲染时给他们加上了:display: block;

5. 行内标签
    行内标签:span a 所有处理文字的标签,如:strong ins b del s u i em
    特点:
        1. 宽高对于行内元素没有作用
        2. 可以和其他行内元素排成一排
        3. 内容有多大,行内元素就被撑到多大,如果没有内容,那么就没有大小.(把它理解为气球,如果没有吹气,就啥都没有)
        4. 一般用来包裹文字或做一些小的装饰
        5. 行内元素不要嵌套块级元素.a标签除外.因为a有可能包裹块级元素.而且这个技巧在移动端页面很常用.

6. 行内块元素
    行内块元素:img input
    特点:
        1. 可以允许和其他行内元素排成一排(把行内块元素看做一种特殊的文本)
        2. 可以设置宽高

7. 标签之间的相互转换
    块级元素->行内元素:设置display:inline
    行内元素->块级元素:设置display:block

    绝大部分场景不需要进行上述转换.

    行内元素/块级元素->行内块元素:设置display:inline-block
    该转换常用.因为img和input是功能性标签,所以常用.而且既想他有宽高,又想他们排成一排.所以需要用到这个转换.

8. 简易导航制作

9. 交集选择器
    选择既符合某些条件,又符合某些条件的元素集合.
    语法:选择器1选择器2 {CSS语句}
    注意:选择器1与选择器2之间没有空格
    用的不多

10. 并集选择器
    选择符合某些条件,或符合某些条件的元素集合.
    语法:选择器1,选择器2,选择器3 {CSS语句}
    用的不多

11. 后代选择器&子代选择器
    a. 后代选择器:选择指定的父级元素下的指定的某一个或一些后代元素集合.选择结果为父级元素的后代
    (不要求一定是子代,是后代即可.也就是说,父级元素选择器 父级的子代的子代元素选择器{CSS语句},也是可以选择出元素的.)
    语法:父级元素选择器 后代元素选择器 {CSS语句}
    注意:父级元素选择器和后代元素选择器中间是有一个空格的.

    b. 子代选择器:选择指定的父级元素下的指定的某一个或一些子代元素集合.选择结果为父级元素的子代
    (也就是说子代选择器在严格性上的要求比后代选择器要高.因为子代选择器只能选取父代元素的子代,而不能选择父代元素的后代
    (譬如父代元素的子代的子代))
    语法:父级元素选择器 > 子代元素选择器 {CSS语句}
    注意:子代选择器的筛选结果必须为父代的子代,不可以和父代无直接父子关系.
    用的挺多

12, 复合选择器总结
    见11-复合选择器总结.txt

13. 背景属性(颜色 图片 平铺 滚动)
    这是一个复合属性.即(background-xxx)
    a. 背景颜色
        background-color: red; 或16进制 或 rgb(0-255,0-255,0-255) 或 rgba(0-255,0-255,0-255, 0-1)
        注意:设置透明度是背景的透明度而非内容的透明度

    b. 背景图片
        background-image: url("图片路径");
        注意:
            1. 如果不设置的话,图片默认是平铺.即以重复的方式铺满整个容器
            2. 文字是悬浮在背景图片上的

    c. 背景平铺
        background-repeat: no-repeat || repeat(默认值) || repeat-x || repeat-y;
        即:不平铺 ||即平铺 || 沿水平方向平铺(有时会用) || 沿垂直方向平铺(有时会用)
        //TODO:设置不平铺文字没了?

    d. 背景是否跟随滚动条滚动
        background-attachment: scroll || fixed;
        即:跟随滚动条滚动 || 不跟随滚动条滚动 (很少用)

14. 背景位置&简写
    a. 背景位置
        background-position:
        取值:
            a1. 方位名词.
                取值范围:top bottom left right center 即一组描述水平位置 一组描述垂直位置
                书写时不区分顺序.水平和垂直选了词就可以.
                缺点:只能指定固定的位置.除了几个固定的位置之外都无法实现.

            a2. 像素
                程序中的坐标系是以左上角为原点,水平向右为x轴正方向,垂直向下为y轴正方向.
                取值范围:px即可?
                此处计算方式为:
                    (1). 以容器左上角的顶点为起点,图片的左上角顶点为终点;
                    (2). 以水平向右为x轴正方向,以垂直向下为y轴正方向;
                    (3). 起点移动到终点在水平方向和垂直方向上移动的距离.
                    注意:以像素为取值单位时,第一个参数为水平移动距离,第二个参数为垂直移动距离.

            a3. 百分比(了解即可 因为很少有人用)
                此处计算方式为:
                    (1). 此处百分比的含义为:容器宽高的百分比.即图片左上角移动水平/垂直方向上移动容器宽/高的百分之多少.
                    (2). 但不单纯是移动.移动后图片将在水平/垂直方向上往回移动1/2自身宽/高的距离.

            a4. 混写
                例如: 100px top.
                混写时要注意:混写必须考虑顺序.先水平再垂直.

    b. 简写方式
        background:背景颜色 背景图片地址 背景平铺 背景滚动 背景位置
        注:顺序可打乱

15. 背景图片和img图片的区别:使用场景
    img:
    一般用于引入一些产品图(比如淘宝的商品图).它的特点在于:经常性更新.
    因为对于前端来讲,操作img标签是容易的,而操作CSS是不容易的.
    img不需要专门设定宽高就可以显示在页面上.
    img无法让容器中的文本悬浮在图片上(除非后期用定位).

    背景图片:
    一般用于加载一些小图片或小icon,或一些不会变化的背景图片(如淘宝网的LOGO),或超大的、用于烘托气氛的图片(原因:一般超大的图片都是要在这张图片上悬浮一些
    内容的,如果使用img,这些悬浮的内容要放上去就很麻烦了,而且也不符合结构.).
    背景图片默认不具备撑开容器的能力,所以必须专门给容器设定宽高,方可显示背景图片.
    背景图可以让容器内部的文字悬浮在上面,img不行.

16. 继承性
    ※CSS三大特性之一.※
    继承性:后代元素可以继承祖先元素的一些CSS属性.注意是一些不是所有.基本上和文字相关的都可以继承.
    如:color font-系列 font-size font-style font-family font-weight text-align text-decoration
       text-indent line-height 都是可以继承的.
    块元素可以继承父级元素的宽度(此处只是为了好理解,但是概念上宽度并没有被继承,从console中可以看到),但高度不继承.
    a链接颜色不予继承.需要单独写.原因:如果元素自己有颜色,则不予继承祖先元素. 同理,text-decoration属性也不予继承.
    ※如果一个元素自身有对应的属性,那么不予继承.或者可以说,继承过来的相同类型的属性,会被覆盖掉.※(更简单的理解:自己有,用自己的;没有,再去祖先那里找)

17. 层叠性
    即后渲染原则.在权重相同的情况下,后渲染的覆盖先渲染的.
    类的调用位置对结果是没有影响的,决定最终结果的是类的声明位置.

18. 问题
