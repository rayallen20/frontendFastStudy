1. 编码问题
<meta charset="UTF-8"> charset属性的值指定了编码类型.如果不以硬编码的方式指定字符集,
则有可能出现乱码.

2. 其他字符集

3. 感知CSS
CSS的概念及其作用:Cascading Style Sheets,层叠样式表.用于设置网页的文字、图片、样式

4. CSS语法
选择器 {
    属性名1:值1;
    属性名2:值2;
}

5. 字体属性
font-size:控制字体大小
font-style:控制字体倾斜
font-weight:控制字体加粗
font-family:控制字体类型
line-height:控制字体行间距
font:font-style(可省略) font-weight(可省略) font-size/line-height(不可省略) font-family(不可省略)
unicode:http://code.ciaoca.com/style/cssfont2unicode/

6. 开发者工具
调试代码的.对前端而言五星重要.这个阶段能够使用Elements并且选中有问题的标签即可.
Elements面板右侧的Style面板也要关注.用于检测CSS是否有语法错误.
user agent stylesheet:用户浏览器默认样式.

7. 标签选择器
标签选择器:通过标签名选中对应的元素
优点:会将所有满足条件的标签都选中
缺点:无法实现差异化选择

8. 类选择器
最常用的选择器
步骤:
a. 声明类选择器
b. 调用类选择器
特点:无关标签名,只关心标签的class属性值.
Tips:类选择器的命名,不要使用纯数字或无意义英文或中文
语法:
.类名 {
    属性名1:属性值1;
    属性名2:属性值2;
}

9. 多类名选择器
class="类名1 类名2"
Tips:不同的类中相同的属性,如果两个规则的特殊性相同,那么后定义的规则优先.

10. id选择器
不太常用
步骤:
a. 声明id选择器
b. 调用id选择器
语法:
#id名 {
    属性名1:属性值1;
    属性名2:属性值2;
}
id选择器和类选择器的不同之处在于:
类选择器:一次声明,多次调用.
id选择器:一次声明,一次调用.虽然也有效果,但这是由于浏览器的容错处理,并不应该这么写.
通常配合JS使用,而非是配合CSS使用.

11. 通配符选择器
直观理解:
通:通通
配:匹配
通配:通通匹配的选择器.即:所有都选中.
优点:可全部选中
缺点:选中范围太大了.因此效率会很低.
应用场景:初始化.譬如在不同的浏览器对于距离的初始化是不同的,此时就需要通配符选择器将所有DOM节点的
距离均设置为0.

12. 伪类选择器
该选择器选择的是一种状态.
譬如链接,可以被点击.那么就会有:
没被点击过的状态
鼠标移到链接上的状态
被点击过的状态
步骤:
a. 选中要操作状态的元素
b. 设定要生效的状态
语法:
选择器:伪类选择器{
    属性名1:属性值1;
    ...
}
Tips:步骤1中的选择器,可以是任何选择器(标签选择器/类选择器/id选择器)
a标签的伪类选择器:
:link:没有被访问过的状态
:visited:被访问过的状态
:hover:鼠标悬停的状态
:active:鼠标按住不放时的状态
注意:这4个内容的顺序必须按照:
link->visited->hover->active才可以.
//TODO:是否其他标签的伪类选择器都要按照这个顺序?
爱恨准则LoVe HAte
Tips:实际上active和visited很少用到.
其他标签也有伪类,但没有a标签这么多.比如:div就没有link和visited这两个伪类.有active,但很少用,hover倒是很常用.

13. 选择器的总结

14. 文字的相关属性
a. text-decoration的取值
    underline:下划线
    line-through:贯穿线.即删除线
    none:文字默认状态.通常用于取消一些下划线或贯穿线.
b. text-indent:控制首行缩进
    Tips:默认一个字大小为16px.如果写死一个值,则设置/修改font-size时,就要修改这个属性的值.
    因此要使用em,因为em是个相对单位,相对于当前的文字大小.即:1em=1个文字的大小.
c. text-align:控制文字在容器中的水平对齐方式.
    取值:center 居中 left 左对齐 right 右对齐

15. 行高
行高:行与行之间的距离.即行间距.
line-height:控制行间距.
Tips:line-height设置的值=字体大小+行间距.
而其中的行间距的概念是:一行文字距上一行的行间距 + 该行文字距下一行的行间距.而同时这两个间距是相等的.
即:如果想要行间距是100px,假设字体大小为16px,则需要设置line-height的值为116px.
如果设置line-height为100px,则行间距为100-16=84px.
常用功能:单行文本垂直居中.让行高和容器的高度相同.
行高还可以用倍数(也有百分比,但很少用且有坑.),不写单位就表示倍数.是当前文字大小的倍数.
Tips:通过查看Styles旁边的Computed面板可看到一些单位为相对的属性计算后的值.

16. 细节补充
a. 颜色细节补充
b. 注释 /**/